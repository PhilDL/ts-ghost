name: üì¶ Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
      GHOST_URL: ${{ secrets.VITE_GHOST_URL }}
      GHOST_CONTENT_API_KEY: ${{ secrets.VITE_GHOST_CONTENT_API_KEY }}
      GHOST_ADMIN_API_KEY: ${{ secrets.VITE_GHOST_ADMIN_API_KEY }}
      GHOST_VERSION: ${{ secrets.VITE_GHOST_VERSION }}
    steps:
      - name: ‚¨áÔ∏è Checkout Repo
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2

      - name: ‚éî Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"

      - name: üì• Install Dependencies
        run: pnpm i --no-frozen-lockfile

      - name: ü¶ã Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1.4.8
        with:
          # This expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: pnpm release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Changeset has some issues with pnpm so we sync it up manually
      - name: Sync lockfile if necessary
        if: steps.changesets.outputs.hasChangesets == 'true'
        run: |
          git checkout changeset-release/main
          pnpm install --no-frozen-lockfile
          git add .
          git commit -m "chore(release): üì¶ sync lockfile"
          git push origin changeset-release/main

      # - name: Send a Slack notification if a publish happens
      #   if: steps.changesets.outputs.published == 'true'
      #   # You can do something when a publish happens.
      #   run: my-slack-bot send-notification --message "A new version of ${GITHUB_REPOSITORY} was published!"
